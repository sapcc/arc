post_failure_to_slack: &post_failure_to_slack
  put: slack-alert
  params:
    channel: '#automation'
    username: 'Concourse'
    icon_emoji: ':airplane:'
    silent: 'true'
    text: |
      :boom: <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job #$BUILD_NAME failed>
post_deployment_start_to_slack: &post_deployment_start_to_slack
  put: slack-alert
  params:
    channel: '#automation'
    username: 'Concourse'
    icon_emoji: ':airplane:'
    silent: 'true'
    text_file: api.version/current
    text: |
      :airplane_departure: <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Started deploying $BUILD_PIPELINE_NAME $TEXT_FILE_CONTENT to $BUILD_JOB_NAME>

post_deployment_end_to_slack: &post_deployment_end_to_slack
  put: slack-alert
  params:
    channel: '#automation'
    username: 'Concourse'
    icon_emoji: ':airplane:'
    silent: 'true'
    text_file: api.version/current
    text: |
      :airplane_arriving: <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Finished deploying $BUILD_PIPELINE_NAME $TEXT_FILE_CONTENT to $BUILD_JOB_NAME>

kubectl_image: &kubectl_image
  image_resource:
    type: docker-image
    source:
      repository: hub.***REMOVED***/monsoon/kubectl
      tag: 'v1.7.7'
deployment_command: &deployment_command
  run:
    path: sh
    args:
      - -ec
      - |
        tag=$(cat version/current)
        echo kubectl set image deployment/$DEPLOYMENT --namespace=$NAMESPACE $DEPLOYMENT=$REPOSITORY:$tag
        kubectl set image deployment/$DEPLOYMENT --namespace=$NAMESPACE $DEPLOYMENT=$REPOSITORY:$tag
        echo Waiting for deployment to succeed
        STEP=${STEP:-2}
        TIMEOUT=${TIMEOUT:-60}
        sleep $STEP #give the deployment a little time
        until kubectl get deployment $DEPLOYMENT --namespace=$NAMESPACE -o json | \
                jq -e '.status | .unavailableReplicas == null and .replicas == .updatedReplicas' >/dev/null; do
          if [ $TIMEOUT -le 0 ]; then echo -e "\nTimeout waiting for deployment"; exit 1; fi
          TIMEOUT=$((TIMEOUT-STEP))
          sleep $STEP
          printf .
        done
        echo -e "\nDeployment completed"
groups:
  - name: master
    jobs:
      - arc-unit
      - arc-build
      - tests-build
      - api-tests
      - api-build
      - mosquitto-build
      - staging
      - qa-de-1
      - qa-tests
      - promote-emea
      - promote-asia
      - promote-americas
      - release-binary-emea
      - release-binary-asia
      - release-binary-americas
      - ap-ae-1
      - ap-au-1
      - ap-cn-1
      - ap-jp-1
      - ap-jp-2
      - ap-sa-1
      - eu-de-1
      - eu-de-2
      - eu-nl-1
      - eu-ru-1
      - la-br-1
      - na-ca-1
      - na-us-1
      - na-us-2
      - na-us-3
      - arc-website
  - name: pullrequests
    jobs:
      - pr-test
jobs:
  - name: arc-website
    serial: true
    plan:
      - get: website.git
        trigger: true
      - task: deploy
        config:
          platform: 'linux'
          image_resource:
            type: docker-image
            source:
              repository: hub.***REMOVED***/monsoon/arc-website-builder
          inputs:
            - name: website.git
              path: source
          run:
            path: /deploy.sh
            args: [ source/website/ ]
          params:
            SSH_KEY: {{arc-deploy-key}}
    on_failure:
      <<: *post_failure_to_slack
  - name: arc-unit
    public: true
    plan:
      - get: arc.git
        trigger: true
      - aggregate:
        - task: metalint
          file: arc.git/ci/metalint.yaml
        - task: unit
          file: arc.git/ci/unit.yaml
    on_failure:
      <<: *post_failure_to_slack
  - name: pr-test
    public: true
    plan:
      - get: pullrequest
        trigger: true
      - put: pullrequest
        params:
          path: pullrequest
          status: pending
      - aggregate:
        - task: metalint
          input_mapping: {arc.git: pullrequest}
          file: pullrequest/ci/metalint.yaml
        - task: unit
          input_mapping: {arc.git: pullrequest}
          file: pullrequest/ci/unit.yaml
        on_failure:
          put: pullrequest
          params:
            path: pullrequest
            status: failure
      - put: pullrequest
        params:
          path: pullrequest
          status: success

  - name: arc-build
    serial: true
    plan:
      - aggregate:
        - get: arc.git
          trigger: true
          passed: [ arc-unit ]
        - get: arc.version
          params: { bump: true }
      - task: compile
        file: arc.git/ci/build-arc.yaml
      - aggregate:
        - task: upload-emea
          file: arc.git/ci/swift-upload.yaml
          params:
            CONTAINER: {{swift-container-beta}}
            OS_AUTH_URL: {{swift-auth-url-emea}}
            OS_USERNAME: {{swift-username}}
            OS_PASSWORD: {{swift-api-key-emea}}
            OS_USER_DOMAIN_NAME: {{swift-domain}}
            OS_PROJECT_ID: {{swift-project-id-emea}}
        - task: upload-amercias
          file: arc.git/ci/swift-upload.yaml
          params:
            CONTAINER: {{swift-container-beta}}
            OS_AUTH_URL: {{swift-auth-url-americas}}
            OS_USERNAME: {{swift-username}}
            OS_PASSWORD: {{swift-api-key-americas}}
            OS_USER_DOMAIN_NAME: {{swift-domain}}
            OS_PROJECT_ID: {{swift-project-id-americas}}
        - task: upload-asia
          file: arc.git/ci/swift-upload.yaml
          params:
            CONTAINER: {{swift-container-beta}}
            OS_AUTH_URL: {{swift-auth-url-asia}}
            OS_USERNAME: {{swift-username}}
            OS_PASSWORD: {{swift-api-key-asia}}
            OS_USER_DOMAIN_NAME: {{swift-domain}}
            OS_PROJECT_ID: {{swift-project-id-asia}}
      - put: arc.version
        params: { filename: arc.version/current}
    on_failure:
      <<: *post_failure_to_slack

  - name: tests-build
    plan:
      - aggregate:
        - get: tests.git
          trigger: true
        - get: tests.version
          params: { bump: true }
      - task: build
        file: tests.git/ci/build-tests.yaml
      - put: tests.image
        params:
          build: build/integration-tests
          tag: tests.version/current
          tag_as_latest: true
          cache: true
          cache_tag: latest
      - put: tests.version
        params: { filename: tests.version/current}
    on_failure:
      <<: *post_failure_to_slack

  - name: api-tests
    plan:
      - get: arc.git
        trigger: true
        passed: [ arc-unit ]
      - task: test
        file: arc.git/ci/api-tests.yaml
    on_failure:
      <<: *post_failure_to_slack

  - name: api-build
    plan:
      - aggregate:
        - get: arc.git
          trigger: true
          passed: [ api-tests ]
        - get: api.version
          params: { bump: true }
      - aggregate:
        - task: api
          file: arc.git/ci/build-api.yaml
        - task: janitor
          file: arc.git/ci/build-janitor.yaml
      - task: prepare-image
        file: arc.git/ci/prepare-api-image.yaml
      - put: api.image
        params:
          build: build/api-server
          tag: api.version/current
          tag_as_latest: true
          cache: true
          cache_tag: latest
      - task: scan-arc-api-image
        file: arc.git/ci/vscan.yaml
        input_mapping:
          image.version: api.version
        params:
          IMAGE_NAME: hub.***REMOVED***/monsoon/arc-api
      - put: api.version
        params: { filename: api.version/current}
    on_failure:
      <<: *post_failure_to_slack

  - name: mosquitto-build
    plan:
      - aggregate:
        - get: arc.git
        - get: mosquitto.git
          trigger: true
        - get: mosquitto.version
          params: { bump: true }
      - put: mosquitto.image
        params:
          build: mosquitto.git/
          tag: mosquitto.version/current
          tag_as_latest: true
          cache_tag: latest
          cache: true
      - task: scan-mosquitto-image
        file: arc.git/ci/vscan.yaml
        input_mapping:
          image.version: mosquitto.version
        params:
          IMAGE_NAME: hub.***REMOVED***/monsoon/mosquitto
      - put: mosquitto.version
        params:
          filename: mosquitto.version/current
    on_failure:
      <<: *post_failure_to_slack

  - name: qa-de-1
    serial: true
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [mosquitto-build], trigger: true }
        - { get: mosquitto.git, passed: [mosquitto-build] }
        - { get: api.version, passed: [api-build], trigger: true }
        - { get: arc.git, passed: [api-build] }
        - { get: charts.git }
        - { get: secrets.git }
      - task: deployment
        input_mapping: { version: api.version }
        file: arc.git/ci/helm-upgrade.yaml
        params:
          REGION: qa-de-1
          GITHUB_TOKEN: {{github-access-token}}
    on_failure:
      <<: *post_failure_to_slack

  - name: staging
    serial: true
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [mosquitto-build], trigger: true }
        - { get: mosquitto.git, passed: [mosquitto-build] }
        - { get: api.version, passed: [api-build], trigger: true }
        - { get: arc.git, passed: [api-build] }
        - { get: charts.git }
        - { get: secrets.git }
      - task: deployment
        input_mapping: { version: api.version }
        file: arc.git/ci/helm-upgrade.yaml
        params:
          REGION: staging
          GITHUB_TOKEN: {{github-access-token}}
    on_failure:
      <<: *post_failure_to_slack

  - name: qa-tests
    serial: true
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [qa-de-1], trigger: true }
        - { get: mosquitto.git, passed: [qa-de-1] }
        - { get: api.version, passed: [qa-de-1], trigger: true }
        - { get: tests.image, passed: [tests-build], trigger: true }
        - { get: arc.version, passed: [arc-build], trigger: true }
        - { get: arc.git, passed: [arc-build] }
        - { get: charts.git, passed: [qa-de-1] }
      - task: tests
        image: tests.image
        config:
          platform: linux
          inputs:
            - name: api.version
            - name: arc.version
          run:
            path: "sh"
            args:
              - -exc
              - |
                API_VERSION=$(cat api.version/current)
                ARC_VERSION=$(cat arc.version/current)
                export API_VERSION ARC_VERSION
                run_tests.sh

          params:
            API_SERVER: https://arc.***REMOVED***
            KEYSTONE_ENDPOINT: https://identity.***REMOVED***/v3
            DOMAIN: monsoon3
            PROJECT: Arc Test
            USERNAME: TM3_D063222_01
            PASSWORD: {{qa-tests-password}}
    on_failure:
      <<: *post_failure_to_slack
  - name: promote-emea
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [qa-tests] }
        - { get: mosquitto.git, passed: [qa-tests] }
        - { get: api.version, passed: [qa-tests] }
        - { get: arc.git, passed: [qa-tests] }
        - { get: charts.git, passed: [qa-tests] }
        - { get: arc.version, passed: [qa-tests] }
  - name: promote-asia
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [qa-tests] }
        - { get: mosquitto.git, passed: [qa-tests] }
        - { get: api.version, passed: [qa-tests] }
        - { get: arc.git, passed: [qa-tests] }
        - { get: charts.git, passed: [qa-tests] }
        - { get: arc.version, passed: [qa-tests] }

  - name: promote-americas
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [qa-tests] }
        - { get: mosquitto.git, passed: [qa-tests] }
        - { get: api.version, passed: [qa-tests] }
        - { get: arc.git, passed: [qa-tests] }
        - { get: charts.git, passed: [qa-tests] }
        - { get: arc.version, passed: [qa-tests] }

  - name: release-binary-emea
    serial: true
    plan:
      - aggregate:
        - { get: arc.version, passed: [promote-emea], trigger: true }
        - { get: arc.git, passed: [promote-emea] }
      - task: swift-copy
        file: arc.git/ci/swift-copy.yaml
        params:
          CONTAINER: {{swift-container-stable}}
          SOURCE_CONTAINER: {{swift-container-beta}}
          OS_AUTH_URL: {{swift-auth-url-emea}}
          OS_USERNAME: {{swift-username}}
          OS_PASSWORD: {{swift-api-key-emea}}
          OS_USER_DOMAIN_NAME: {{swift-domain}}
          OS_PROJECT_ID: {{swift-project-id-emea}}
    on_failure:
      <<: *post_failure_to_slack
  - name: release-binary-asia
    serial: true
    plan:
      - aggregate:
        - { get: arc.version, passed: [promote-asia], trigger: true }
        - { get: arc.git, passed: [promote-asia] }
      - task: swift-copy
        file: arc.git/ci/swift-copy.yaml
        params:
          CONTAINER: {{swift-container-stable}}
          SOURCE_CONTAINER: {{swift-container-beta}}
          OS_AUTH_URL: {{swift-auth-url-asia}}
          OS_USERNAME: {{swift-username}}
          OS_PASSWORD: {{swift-api-key-asia}}
          OS_USER_DOMAIN_NAME: {{swift-domain}}
          OS_PROJECT_ID: {{swift-project-id-asia}}
    on_failure:
      <<: *post_failure_to_slack
  - name: release-binary-americas
    serial: true
    plan:
      - aggregate:
        - { get: arc.version, passed: [promote-americas], trigger: true }
        - { get: arc.git, passed: [promote-americas] }
      - task: swift-copy
        file: arc.git/ci/swift-copy.yaml
        params:
          CONTAINER: {{swift-container-stable}}
          SOURCE_CONTAINER: {{swift-container-beta}}
          OS_AUTH_URL: {{swift-auth-url-americas}}
          OS_USERNAME: {{swift-username}}
          OS_PASSWORD: {{swift-api-key-americas}}
          OS_USER_DOMAIN_NAME: {{swift-domain}}
          OS_PROJECT_ID: {{swift-project-id-americas}}
    on_failure:
      <<: *post_failure_to_slack
  - name: eu-de-1
    serial: true
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [promote-emea], trigger: true }
        - { get: mosquitto.git, passed: [promote-emea] }
        - { get: api.version, passed: [promote-emea], trigger: true }
        - { get: arc.git, passed: [promote-emea] }
        - { get: charts.git, passed: [promote-emea] }
        - { get: secrets.git }
      - <<: *post_deployment_start_to_slack
      - task: deployment
        input_mapping: { version: api.version }
        file: arc.git/ci/helm-upgrade.yaml
        params:
          REGION: eu-de-1
          GITHUB_TOKEN: {{github-access-token}}
      - <<: *post_deployment_end_to_slack
    on_failure:
      <<: *post_failure_to_slack
  - name: eu-de-2
    serial: true
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [promote-emea], trigger: true }
        - { get: mosquitto.git, passed: [promote-emea] }
        - { get: api.version, passed: [promote-emea], trigger: true }
        - { get: arc.git, passed: [promote-emea] }
        - { get: charts.git, passed: [promote-emea] }
        - { get: secrets.git }
      - <<: *post_deployment_start_to_slack
      - task: deployment
        input_mapping: { version: api.version }
        file: arc.git/ci/helm-upgrade.yaml
        params:
          REGION: eu-de-2
          GITHUB_TOKEN: {{github-access-token}}
      - <<: *post_deployment_end_to_slack
    on_failure:
      <<: *post_failure_to_slack
  - name: eu-ru-1
    serial: true
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [promote-emea], trigger: true }
        - { get: mosquitto.git, passed: [promote-emea] }
        - { get: api.version, passed: [promote-emea], trigger: true }
        - { get: arc.git, passed: [promote-emea] }
        - { get: charts.git, passed: [promote-emea] }
        - { get: secrets.git }
      - <<: *post_deployment_start_to_slack
      - task: deployment
        input_mapping: { version: api.version }
        file: arc.git/ci/helm-upgrade.yaml
        params:
          REGION: eu-ru-1
          GITHUB_TOKEN: {{github-access-token}}
      - <<: *post_deployment_end_to_slack
    on_failure:
      <<: *post_failure_to_slack

  - name: ap-ae-1
    serial: true
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [promote-asia], trigger: true }
        - { get: mosquitto.git, passed: [promote-asia] }
        - { get: api.version, passed: [promote-asia], trigger: true }
        - { get: arc.git, passed: [promote-asia] }
        - { get: charts.git, passed: [promote-asia] }
        - { get: secrets.git }
      - <<: *post_deployment_start_to_slack
      - task: deployment
        input_mapping: { version: api.version }
        file: arc.git/ci/helm-upgrade.yaml
        params:
          REGION: ap-ae-1
          GITHUB_TOKEN: {{github-access-token}}
      - <<: *post_deployment_end_to_slack
    on_failure:
      <<: *post_failure_to_slack

  - name: ap-au-1
    serial: true
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [promote-asia], trigger: true }
        - { get: mosquitto.git, passed: [promote-asia] }
        - { get: api.version, passed: [promote-asia], trigger: true }
        - { get: arc.git, passed: [promote-asia] }
        - { get: charts.git, passed: [promote-asia] }
        - { get: secrets.git }
      - <<: *post_deployment_start_to_slack
      - task: deployment
        input_mapping: { version: api.version }
        file: arc.git/ci/helm-upgrade.yaml
        params:
          REGION: ap-au-1
          GITHUB_TOKEN: {{github-access-token}}
      - <<: *post_deployment_end_to_slack
    on_failure:
      <<: *post_failure_to_slack

  - name: eu-nl-1
    serial: true
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [promote-emea], trigger: true }
        - { get: mosquitto.git, passed: [promote-emea] }
        - { get: api.version, passed: [promote-emea], trigger: true }
        - { get: arc.git, passed: [promote-emea] }
        - { get: charts.git, passed: [promote-emea] }
        - { get: secrets.git }
      - <<: *post_deployment_start_to_slack
      - task: deployment
        input_mapping: { version: api.version }
        file: arc.git/ci/helm-upgrade.yaml
        params:
          REGION: eu-nl-1
          GITHUB_TOKEN: {{github-access-token}}
      - <<: *post_deployment_end_to_slack
    on_failure:
      <<: *post_failure_to_slack

  - name: ap-cn-1
    serial: true
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [promote-asia], trigger: true }
        - { get: mosquitto.git, passed: [promote-asia] }
        - { get: api.version, passed: [promote-asia], trigger: true }
        - { get: arc.git, passed: [promote-asia] }
        - { get: charts.git, passed: [promote-asia] }
        - { get: secrets.git }
      - <<: *post_deployment_start_to_slack
      - task: deployment
        input_mapping: { version: api.version }
        file: arc.git/ci/helm-upgrade.yaml
        params:
          REGION: ap-cn-1
          GITHUB_TOKEN: {{github-access-token}}
      - <<: *post_deployment_end_to_slack
    on_failure:
      <<: *post_failure_to_slack

  - name: ap-jp-1
    serial: true
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [promote-asia], trigger: true }
        - { get: mosquitto.git, passed: [promote-asia] }
        - { get: api.version, passed: [promote-asia], trigger: true }
        - { get: arc.git, passed: [promote-asia] }
        - { get: charts.git, passed: [promote-asia] }
        - { get: secrets.git }
      - <<: *post_deployment_start_to_slack
      - task: deployment
        input_mapping: { version: api.version }
        file: arc.git/ci/helm-upgrade.yaml
        params:
          REGION: ap-jp-1
          GITHUB_TOKEN: {{github-access-token}}
      - <<: *post_deployment_end_to_slack
    on_failure:
      <<: *post_failure_to_slack

  - name: ap-jp-2
    serial: true
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [promote-asia], trigger: true }
        - { get: mosquitto.git, passed: [promote-asia] }
        - { get: api.version, passed: [promote-asia], trigger: true }
        - { get: arc.git, passed: [promote-asia] }
        - { get: charts.git, passed: [promote-asia] }
        - { get: secrets.git }
      - <<: *post_deployment_start_to_slack
      - task: deployment
        input_mapping: { version: api.version }
        file: arc.git/ci/helm-upgrade.yaml
        params:
          REGION: ap-jp-2
          GITHUB_TOKEN: {{github-access-token}}
      - <<: *post_deployment_end_to_slack
    on_failure:
      <<: *post_failure_to_slack

  - name: ap-sa-1
    serial: true
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [promote-asia], trigger: true }
        - { get: mosquitto.git, passed: [promote-asia] }
        - { get: api.version, passed: [promote-asia], trigger: true }
        - { get: arc.git, passed: [promote-asia] }
        - { get: charts.git, passed: [promote-asia] }
        - { get: secrets.git }
      - <<: *post_deployment_start_to_slack
      - task: deployment
        input_mapping: { version: api.version }
        file: arc.git/ci/helm-upgrade.yaml
        params:
          REGION: ap-sa-1
          GITHUB_TOKEN: {{github-access-token}}
      - <<: *post_deployment_end_to_slack
    on_failure:
      <<: *post_failure_to_slack

  - name: la-br-1
    serial: true
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [promote-americas], trigger: true }
        - { get: mosquitto.git, passed: [promote-americas] }
        - { get: api.version, passed: [promote-americas], trigger: true }
        - { get: arc.git, passed: [promote-americas] }
        - { get: charts.git, passed: [promote-americas] }
        - { get: secrets.git }
      - <<: *post_deployment_start_to_slack
      - task: deployment
        input_mapping: { version: api.version }
        file: arc.git/ci/helm-upgrade.yaml
        params:
          REGION: la-br-1
          GITHUB_TOKEN: {{github-access-token}}
      - <<: *post_deployment_end_to_slack
    on_failure:
      <<: *post_failure_to_slack

  - name: na-ca-1
    serial: true
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [promote-americas], trigger: true }
        - { get: mosquitto.git, passed: [promote-americas] }
        - { get: api.version, passed: [promote-americas], trigger: true }
        - { get: arc.git, passed: [promote-americas] }
        - { get: charts.git, passed: [promote-americas] }
        - { get: secrets.git }
      - <<: *post_deployment_start_to_slack
      - task: deployment
        input_mapping: { version: api.version }
        file: arc.git/ci/helm-upgrade.yaml
        params:
          REGION: na-ca-1
          GITHUB_TOKEN: {{github-access-token}}
      - <<: *post_deployment_end_to_slack
    on_failure:
      <<: *post_failure_to_slack
  - name: na-us-1
    serial: true
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [promote-americas], trigger: true }
        - { get: mosquitto.git, passed: [promote-americas] }
        - { get: api.version, passed: [promote-americas], trigger: true }
        - { get: arc.git, passed: [promote-americas] }
        - { get: charts.git, passed: [promote-americas] }
        - { get: secrets.git }
      - <<: *post_deployment_start_to_slack
      - task: deployment
        input_mapping: { version: api.version }
        file: arc.git/ci/helm-upgrade.yaml
        params:
          REGION: na-us-1
          GITHUB_TOKEN: {{github-access-token}}
      - <<: *post_deployment_end_to_slack
    on_failure:
      <<: *post_failure_to_slack

  - name: na-us-2
    serial: true
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [promote-americas], trigger: true }
        - { get: mosquitto.git, passed: [promote-americas] }
        - { get: api.version, passed: [promote-americas], trigger: true }
        - { get: arc.git, passed: [promote-americas] }
        - { get: charts.git, passed: [promote-americas] }
        - { get: secrets.git }
      - <<: *post_deployment_start_to_slack
      - task: deployment
        input_mapping: { version: api.version }
        file: arc.git/ci/helm-upgrade.yaml
        params:
          REGION: na-us-2
          GITHUB_TOKEN: {{github-access-token}}
      - <<: *post_deployment_end_to_slack
    on_failure:
      <<: *post_failure_to_slack

  - name: na-us-3
    serial: true
    plan:
      - aggregate:
        - { get: mosquitto.version, passed: [promote-americas], trigger: true }
        - { get: mosquitto.git, passed: [promote-americas] }
        - { get: api.version, passed: [promote-americas], trigger: true }
        - { get: arc.git, passed: [promote-americas] }
        - { get: charts.git, passed: [promote-americas] }
        - { get: secrets.git }
      - <<: *post_deployment_start_to_slack
      - task: deployment
        input_mapping: { version: api.version }
        file: arc.git/ci/helm-upgrade.yaml
        params:
          REGION: na-us-3
          GITHUB_TOKEN: {{github-access-token}}
      - <<: *post_deployment_end_to_slack
    on_failure:
      <<: *post_failure_to_slack
  #- name: production-tests
  #  serial: true
  #  plan:
  #    - aggregate:
  #      - { get: mosquitto.image, passed: [mosquitto-production], trigger: true }
  #      - { get: mosquitto.version, passed: [mosquitto-production] }
  #      - { get: api.image, passed: [api-production], trigger: true }
  #      - { get: api.version, passed: [api-production] }
  #      - { get: tests.image, trigger: true }
  #      - { get: arc.version, passed: [promote], trigger: true }
  #    - task: tests
  #      privileged: true
  #      config:
  #        platform: linux
  #        image: docker://docker.***REMOVED***/monsoon-concourse/arc-pipeline#current
  #        inputs:
  #          - name: mosquitto.image
  #          - name: api.image
  #          - name: api.version
  #          - name: tests.image
  #          - name: arc.version
  #        run: { path: /tasks/production }
  #        params:
  #          API_SERVER: https://arc-production.***REMOVED***
  #          UPDATE_SERVER: http://arc-update-site-production.***REMOVED***:8080
  #          KEYSTONE_ENDPOINT: https://identity.***REMOVED***:5000/v3
  #          DOMAIN: sap_default
  #          PROJECT: D062284_sandbox
  #          USERNAME: arc_test
  #          PASSWORD: {{production-tests-password}}
  #    - aggregate:
  #      - put: mosquitto.image
  #        params: {tag: tests/mosquitto.image/newtag}
  #      - put: api.image
  #        params: {tag: tests/api.image/newtag}
  #      - put: update-site.image
  #        params: {tag: tests/update-site.image/newtag}
  #      - put: tests.image
  #        params: {tag: tests/tests.image/newtag}

resources:
  - name: website.git
    type: git
    check_every: 1h
    webhook_token: aldkhalkdhlafhlh
    source:
      uri: https://gitHub.***REMOVED***/monsoon/arc.git
      branch: master
      private_key: {{arc-deploy-key}}
      paths: [ website/, ci/ ]
  - name: arc.git
    type: git
    check_every: 1h
    webhook_token: aldkhalkdhlafhlh
    source:
      uri: https://gitHub.***REMOVED***/monsoon/arc.git
      branch: master
      ignore_paths: [ website/, integration-tests/, update-server/ ]
  - name: charts.git
    type: git
    source:
      uri: https://github.com/sapcc/helm-charts.git
      branch: master
  - name: secrets.git
    type: git
    check_every: 1h
    webhook_token: aldkhalkdhlafhlh
    source:
      uri: https://gitHub.***REMOVED***/cc/secrets.git
      private_key: {{secrets-ssh-key}}
      branch: master
  - name: tests.git
    type: git
    check_every: 1h
    webhook_token: aldkhalkdhlafhlh
    source:
      uri: https://gitHub.***REMOVED***/monsoon/arc.git
      branch: master
      paths: [ integration-tests/, ci/ ]
  - name: arc.version
    type: monsoon-version
    source:
      key:  arc
      initial:   "00010101"
      username:  {{swift-username}}
      api_key:   {{swift-api-key-emea}}
      auth_url:  {{swift-auth-url-emea}}
      domain:    {{swift-domain}}
      tenant_id: {{swift-project-id-emea}}
      container: {{swift-container-version}}
  - name: api.image
    type: docker-image
    source:
      repository: hub.***REMOVED***/monsoon/arc-api
      username:   {{internal-registry-username}}
      password:   {{internal-registry-password}}
  - name: api.version
    type: monsoon-version
    source:
      key:  arc-api
      initial:   "00010101"
      username:  {{swift-username}}
      api_key:   {{swift-api-key-emea}}
      auth_url:  {{swift-auth-url-emea}}
      domain:    {{swift-domain}}
      tenant_id: {{swift-project-id-emea}}
      container: {{swift-container-version}}
  - name: mosquitto.git
    type: git
    source:
      uri: https://gitHub.***REMOVED***/monsoon/mosquitto.git
      branch: master
  - name: mosquitto.image
    type: docker-image
    source:
      repository: hub.***REMOVED***/monsoon/mosquitto
      username:   {{internal-registry-username}}
      password:   {{internal-registry-password}}
  - name: mosquitto.version
    type: monsoon-version
    source:
      key:  arc-mosquitto
      initial:   "00010101"
      username:  {{swift-username}}
      api_key:   {{swift-api-key-emea}}
      auth_url:  {{swift-auth-url-emea}}
      domain:    {{swift-domain}}
      tenant_id: {{swift-project-id-emea}}
      container: {{swift-container-version}}
  - name: tests.image
    type: docker-image
    source:
      repository: hub.***REMOVED***/monsoon/arc-tests
      username:   {{internal-registry-username}}
      password:   {{internal-registry-password}}
  - name: tests.version
    type: monsoon-version
    source:
      key:  arc-tests
      initial:   "00010101"
      username:  {{swift-username}}
      api_key:   {{swift-api-key-emea}}
      auth_url:  {{swift-auth-url-emea}}
      domain:    {{swift-domain}}
      tenant_id: {{swift-project-id-emea}}
      container: {{swift-container-version}}
  - name: pullrequest
    type: pullrequest
    check_every: 30s
    source:
      repo: monsoon/arc
      uri:  https://gitHub.***REMOVED***/monsoon/arc
      api_endpoint: https://gitHub.***REMOVED***/api/v3
      access_token: {{github-access-token}}
  - name: slack-alert
    type: slack-notification
    source:
      url: {{slack-webhook-url}}

resource_types:
  - name: monsoon-version
    type: docker-image
    source:
      repository: hub.***REMOVED***/concourse/monsoon-version
  - name: pullrequest
    type: docker-image
    source:
      repository: hub.***REMOVED***/concourse/pullrequest-resource
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest
